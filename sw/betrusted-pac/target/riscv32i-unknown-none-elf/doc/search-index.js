var N=null,E="",T="t",U="u",searchIndex={};
var R=["Just like [`Cell`] but with [volatile] read / write…","result","VolatileCell","usize","bit_length","get_bit","Obtains the bit at the index `bit`; note that index 0 is…","get_bits","Obtains the range of bits specified by `range`; note that…","set_bit","Sets the bit at the index `bit` to the value `value`…","set_bits","Sets the range of bits defined by the range `range` to the…","BitField","BitArray","criticalsection","try_from","try_into","borrow_mut","borrow","type_id","Peripheral","CriticalSection","Critical section token","A \"mutex\" based on critical sections","Interrupt number","Returns the number associated with an interrupt","satp register","riscv::register","mvendorid register","Reads the CSR","mvendorid","Returns the contents of the register as raw bits","marchid register","marchid","mimpid register","mstatus register","Supervisor","User Interrupt Enable","Supervisor Interrupt Enable","Machine Interrupt Enable","Supervisor Previous Privilege Mode","Machine Previous Privilege Mode","Floating-point extension state","User Previous Interrupt Enable","Supervisor Previous Interrupt Enable","Machine Previous Interrupt Enable","Additional extension state","misa register","mie register","User Software Interrupt Enable","Supervisor Software Interrupt Enable","Machine Software Interrupt Enable","User Timer Interrupt Enable","Supervisor Timer Interrupt Enable","Machine Timer Interrupt Enable","User External Interrupt Enable","Supervisor External Interrupt Enable","Machine External Interrupt Enable","mtvec register","trapmode","Writes the CSR","mcause register","Interrupt","Exception","Trap Cause","mip register","Reads the CSR as a 64-bit value","riscv::interrupt","typeid","riscv::register::satp","riscv::register::mvendorid","riscv::register::marchid","riscv::register::mimpid","riscv::register::mstatus","riscv::register::misa","riscv::register::mie","riscv::register::mtvec","riscv::register::mcause","riscv::register::mip","formatter","interrupt","mstatus","exception","Creates a critical section token","Creates a new mutex","Borrows the data for the duration of the critical section","Mvendorid","TrapMode","MESSIBLE","PICORVSPI","VERSION","TIMER0","tryfrominterrupterror","Reset value of the register","betrusted_pac","scratch3","betrusted_pac::ctrl","scratch2","scratch1","bus_errors3","bus_errors2","bus_errors1","bus_errors0","Bits 24-31 of `CTRL_SCRATCH`.","Bits 16-23 of `CTRL_SCRATCH`.","Bits 8-15 of `CTRL_SCRATCH`.","Bits 0-7 of `CTRL_SCRATCH`.","Bits 24-31 of `CTRL_BUS_ERRORS`.","Bits 16-23 of `CTRL_BUS_ERRORS`.","Bits 8-15 of `CTRL_BUS_ERRORS`.","Bits 0-7 of `CTRL_BUS_ERRORS`.","RegisterBlock","Register block","prescale1","prescale0","betrusted_pac::i2c","Writes raw bits to the field","Sets the field bit","clear_bit","Clears the field bit","Bits 0:5 - Reserved (for cross-compatibility with…","Bit 6 - When set to `1`, interrupts are enabled.","Bit 7 - When set to `1`, the core is enabled.","Write proxy for field `Resvd`","Reader of field `Resvd`","Bit 0 - Interrupt acknowledge; when set, clears a pending…","Bits 1:2 - reserved for cross-compatibility with OpenCores…","Bit 3 - when a receiver, sent ack (`ACK=0`) or nack…","Bit 4 - write to slave","Bit 5 - read from slave","Bit 6 - generate stop condition","Bit 7 - generate (repeated) start condition","Bit 0 - Interrupt flag, This bit is set when an interrupt…","Bit 1 - transfer in progress","Bits 2:4 - reserved for cross-compatibility with OpenCores…","Bit 5 - Set when arbitration for the bus is lost","Bit 6 - I2C block is busy processing the latest command","Bit 7 - Received acknowledge from slave. 1 = no ack…","ev_status","ev_pending","ev_enable","Bits 8-15 of `I2C_PRESCALE`. Prescaler value. Set to…","Bits 0-7 of `I2C_PRESCALE`.","This register you can `read`, `reset`, `write`,…","Next byte to transmit to slave devices. LSB indicates R/W…","Data being read from slaved devices","betrusted_pac::messible","Reader of register STATUS","Writer for register STATUS","Bit 0 - `0` if more data can fit into the IN FIFO.","Bit 1 - `1` if data can be read from the OUT FIFO.","Write half of the FIFO to send data out the Messible.…","Read half of the FIFO to receive data on the Messible.…","betrusted_pac::picorvspi","betrusted_pac::reboot","Bits 24-31 of `REBOOT_ADDR`.","Bits 16-23 of `REBOOT_ADDR`.","Bits 8-15 of `REBOOT_ADDR`.","Bits 0-7 of `REBOOT_ADDR`.","betrusted_pac::rgb","Reader of register CTRL","Writer for register CTRL","betrusted_pac::timer0","update_value","Reader of register EV_STATUS","Writer for register EV_STATUS","Reader of register EV_PENDING","Writer for register EV_PENDING","Reader of register EV_ENABLE","Writer for register EV_ENABLE","Bits 24-31 of `TIMER0_LOAD`. Load value when Timer is…","Bits 16-23 of `TIMER0_LOAD`.","Bits 8-15 of `TIMER0_LOAD`.","Bits 0-7 of `TIMER0_LOAD`.","Bits 24-31 of `TIMER0_RELOAD`. Reload value when Timer…","Bits 16-23 of `TIMER0_RELOAD`.","Bits 8-15 of `TIMER0_RELOAD`.","Bits 0-7 of `TIMER0_RELOAD`.","Enable of the Timer.Set if to 1 to enable/start the Timer…","Update of the current countdown value.A write to this…","Bits 24-31 of `TIMER0_VALUE`. Latched countdown value","Bits 16-23 of `TIMER0_VALUE`.","Bits 8-15 of `TIMER0_VALUE`.","Bits 0-7 of `TIMER0_VALUE`.","EV_STATUS","EV_PENDING","EV_ENABLE","betrusted_pac::version","gitextra1","gitextra0","Bits 24-31 of `VERSION_GITREV`.","Bits 16-23 of `VERSION_GITREV`.","Bits 8-15 of `VERSION_GITREV`.","Bits 0-7 of `VERSION_GITREV`.","Bits 8-9 of `VERSION_GITEXTRA`.","Bits 0-7 of `VERSION_GITEXTRA`.","Returns a pointer to the register block","betrusted_pac::generic","betrusted_pac::i2c::control","betrusted_pac::i2c::command","betrusted_pac::i2c::status","betrusted_pac::messible::status","reset_value","Peripherals","ResetValue","RESVD_W","ARBLOST_W","BUS_ERRORS3","BUS_ERRORS2","BUS_ERRORS1","BUS_ERRORS0","PRESCALE1","PRESCALE0","UPDATE_VALUE","GITEXTRA1","GITEXTRA0","TICKTIMER","Reader of register CONTROL","Writer for register CONTROL","Bit 0 - Write a `1` to this bit to reset the count to 0","Bit 1 - Write a `1` to this field to pause counting, 0 for…","betrusted_pac::ticktimer","Bits 40-47 of `TICKTIMER_TIME`. Elapsed time in systicks","Bits 32-39 of `TICKTIMER_TIME`.","Bits 24-31 of `TICKTIMER_TIME`.","Bits 16-23 of `TICKTIMER_TIME`.","Bits 8-15 of `TICKTIMER_TIME`.","Bits 0-7 of `TICKTIMER_TIME`.","0x00 - ","betrusted_pac::ticktimer::control"];
searchIndex["bare_metal"]={"doc":"Abstractions common to bare metal systems","i":[[3,R[21],"bare_metal","A peripheral",N,N],[3,R[22],E,R[23],N,N],[3,"Mutex",E,R[24],N,N],[8,"Nr",E,R[25],N,N],[10,"nr",E,R[26],0,[[["self"]],["u8"]]],[11,"new",E,"Creates a new peripheral",1,[[[R[3]]],["self"]]],[11,R[19],E,"Borrows the peripheral for the duration of a critical…",1,[[["self"],[R[15]]],[T]]],[11,"get",E,R[197],1,[[["self"]]]],[11,"new",E,R[84],2,[[],["self"]]],[11,"new",E,R[85],3,[[[T]],["self"]]],[11,R[19],E,R[86],3,[[["self"],[R[15]]],[T]]],[11,R[16],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[17],E,E,1,[[],[R[1]]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[69]]]],[11,R[16],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[17],E,E,2,[[],[R[1]]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[69]]]],[11,R[16],E,E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[17],E,E,3,[[],[R[1]]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[R[69]]]],[11,"fmt",E,E,1,[[["self"],[R[80]]],[R[1]]]]],"p":[[8,"Nr"],[3,R[21]],[3,R[22]],[3,"Mutex"]]};
searchIndex["betrusted_pac"]={"doc":"Peripheral access API for SOC microcontrollers (generated…","i":[[3,"RGB",R[95],"RGB",N,N],[3,R[90],E,R[90],N,N],[3,"I2C",E,"I2C",N,N],[3,"REBOOT",E,"REBOOT",N,N],[3,R[217],E,R[217],N,N],[3,"CTRL",E,"CTRL",N,N],[3,R[89],E,R[89],N,N],[3,R[92],E,R[92],N,N],[3,R[91],E,R[91],N,N],[3,R[204],E,"All the peripherals",N,N],[12,"RGB",E,"RGB",0,N],[12,R[90],E,R[90],0,N],[12,"I2C",E,"I2C",0,N],[12,"REBOOT",E,"REBOOT",0,N],[12,R[217],E,R[217],0,N],[12,"CTRL",E,"CTRL",0,N],[12,R[89],E,R[89],0,N],[12,R[92],E,R[92],0,N],[12,R[91],E,R[91],0,N],[4,R[63],E,"Enumeration of all the interrupts",N,N],[13,R[92],E,"0 - timer0",1,N],[13,"I2C",E,"1 - i2c",1,N],[11,R[16],E,E,1,[[["u8"]],[[R[1],[R[93]]],[R[93]]]]],[0,"generic",E,"Common register and bit access and modify traits",N,N],[3,"Reg",R[198],"This structure provides volatile access to register",N,N],[3,"R",E,"Register/field reader",N,N],[3,"W",E,"Register writer",N,N],[4,"Variant",E,"Used if enumerated values cover not the whole range",N,N],[13,"Val",E,"Expected variant",2,N],[13,"Res",E,"Raw bits",2,N],[8,"Readable",E,"This trait shows that register has `read` method",N,N],[8,"Writable",E,"This trait shows that register has `write`,…",N,N],[8,R[205],E,R[94],N,N],[16,"Type",E,"Register size",3,N],[10,R[203],E,R[94],3,[[]]],[11,"read",E,"Reads the contents of `Readable` register",4,[[["self"]],["r"]]],[11,"reset",E,"Writes the reset value to `Writable` register",4,[[["self"]]]],[11,"write",E,"Writes bits to `Writable` register",4,[[["self"],["f"]]]],[11,"write_with_zero",E,"Writes Zero to `Writable` register",4,[[["self"],["f"]]]],[11,"modify",E,"Modifies the contents of the register",4,[[["self"],["f"]]]],[11,"bits",E,"Read raw bits from register/field",5,[[["self"]],[U]]],[11,"bit",E,"Value of the field as raw bits",5,[[["self"]],["bool"]]],[11,"bit_is_clear",E,"Returns `true` if the bit is clear (0)",5,[[["self"]],["bool"]]],[11,"bit_is_set",E,"Returns `true` if the bit is set (1)",5,[[["self"]],["bool"]]],[11,"bits",E,"Writes raw bits to the register",6,[[["self"],[U]],["self"]]],[0,"rgb",R[95],"RGB",N,N],[3,R[112],R[160],R[113],N,N],[12,"dat",E,R[229],7,N],[12,"addr",E,"0x04 - ",7,N],[12,"ctrl",E,"0x08 - ",7,N],[12,"raw",E,"0x0c - ",7,N],[0,"dat",E,E,N,N],[6,"R","betrusted_pac::rgb::dat","Reader of register DAT",N,N],[6,"W",E,"Writer for register DAT",N,N],[0,"addr",R[160],E,N,N],[6,"R","betrusted_pac::rgb::addr","Reader of register ADDR",N,N],[6,"W",E,"Writer for register ADDR",N,N],[0,"ctrl",R[160],E,N,N],[6,"R","betrusted_pac::rgb::ctrl",R[161],N,N],[6,"W",E,R[162],N,N],[0,"raw",R[160],E,N,N],[6,"R","betrusted_pac::rgb::raw","Reader of register RAW",N,N],[6,"W",E,"Writer for register RAW",N,N],[6,"DAT",R[160],R[144],N,N],[6,"ADDR",E,R[144],N,N],[6,"CTRL",E,R[144],N,N],[6,"RAW",E,R[144],N,N],[0,"picorvspi",R[95],R[90],N,N],[3,R[112],R[154],R[113],N,N],[12,"cfg1",E,R[229],8,N],[12,"cfg2",E,"0x04 - ",8,N],[12,"cfg3",E,"0x08 - ",8,N],[12,"cfg4",E,"0x0c - ",8,N],[12,"stat1",E,"0x10 - ",8,N],[12,"stat2",E,"0x14 - ",8,N],[12,"stat3",E,"0x18 - ",8,N],[12,"stat4",E,"0x1c - ",8,N],[0,"cfg1",E,E,N,N],[6,"R","betrusted_pac::picorvspi::cfg1","Reader of register CFG1",N,N],[6,"W",E,"Writer for register CFG1",N,N],[0,"cfg2",R[154],E,N,N],[6,"R","betrusted_pac::picorvspi::cfg2","Reader of register CFG2",N,N],[6,"W",E,"Writer for register CFG2",N,N],[0,"cfg3",R[154],E,N,N],[6,"R","betrusted_pac::picorvspi::cfg3","Reader of register CFG3",N,N],[6,"W",E,"Writer for register CFG3",N,N],[0,"cfg4",R[154],E,N,N],[6,"R","betrusted_pac::picorvspi::cfg4","Reader of register CFG4",N,N],[6,"W",E,"Writer for register CFG4",N,N],[0,"stat1",R[154],E,N,N],[6,"R","betrusted_pac::picorvspi::stat1","Reader of register STAT1",N,N],[6,"W",E,"Writer for register STAT1",N,N],[0,"stat2",R[154],E,N,N],[6,"R","betrusted_pac::picorvspi::stat2","Reader of register STAT2",N,N],[6,"W",E,"Writer for register STAT2",N,N],[0,"stat3",R[154],E,N,N],[6,"R","betrusted_pac::picorvspi::stat3","Reader of register STAT3",N,N],[6,"W",E,"Writer for register STAT3",N,N],[0,"stat4",R[154],E,N,N],[6,"R","betrusted_pac::picorvspi::stat4","Reader of register STAT4",N,N],[6,"W",E,"Writer for register STAT4",N,N],[6,"CFG1",R[154],R[144],N,N],[6,"CFG2",E,R[144],N,N],[6,"CFG3",E,R[144],N,N],[6,"CFG4",E,R[144],N,N],[6,"STAT1",E,R[144],N,N],[6,"STAT2",E,R[144],N,N],[6,"STAT3",E,R[144],N,N],[6,"STAT4",E,R[144],N,N],[0,"i2c",R[95],"I2C",N,N],[3,R[112],R[116],R[113],N,N],[12,R[114],E,"0x00 - Bits 8-15 of `I2C_PRESCALE`. Prescaler value. Set…",9,N],[12,R[115],E,"0x04 - Bits 0-7 of `I2C_PRESCALE`.",9,N],[12,"control",E,"0x08 - ",9,N],[12,"txr",E,"0x0c - Next byte to transmit to slave devices. LSB…",9,N],[12,"rxr",E,"0x10 - Data being read from slaved devices",9,N],[12,"command",E,"0x14 - ",9,N],[12,"status",E,"0x18 - ",9,N],[12,R[139],E,"0x1c - ",9,N],[12,R[140],E,"0x20 - ",9,N],[12,R[141],E,"0x24 - ",9,N],[0,R[114],E,R[142],N,N],[6,"R","betrusted_pac::i2c::prescale1","Reader of register PRESCALE1",N,N],[6,"W",E,"Writer for register PRESCALE1",N,N],[0,R[115],R[116],R[143],N,N],[6,"R","betrusted_pac::i2c::prescale0","Reader of register PRESCALE0",N,N],[6,"W",E,"Writer for register PRESCALE0",N,N],[0,"control",R[116],E,N,N],[3,R[206],R[199],R[124],N,N],[3,"IEN_W",E,"Write proxy for field `IEN`",N,N],[3,"EN_W",E,"Write proxy for field `EN`",N,N],[6,"R",E,R[218],N,N],[6,"W",E,R[219],N,N],[6,"RESVD_R",E,R[125],N,N],[6,"IEN_R",E,"Reader of field `IEN`",N,N],[6,"EN_R",E,"Reader of field `EN`",N,N],[11,"bits",E,R[117],10,[[["u8"]],["w"]]],[11,R[9],E,R[118],11,[[],["w"]]],[11,R[119],E,R[120],11,[[],["w"]]],[11,"bit",E,R[117],11,[[["bool"]],["w"]]],[11,R[9],E,R[118],12,[[],["w"]]],[11,R[119],E,R[120],12,[[],["w"]]],[11,"bit",E,R[117],12,[[["bool"]],["w"]]],[11,"resvd",E,R[121],13,[[["self"]],["resvd_r"]]],[11,"ien",E,R[122],13,[[["self"]],["ien_r"]]],[11,"en",E,R[123],13,[[["self"]],["en_r"]]],[11,"resvd",E,R[121],14,[[["self"]],["resvd_w"]]],[11,"ien",E,R[122],14,[[["self"]],["ien_w"]]],[11,"en",E,R[123],14,[[["self"]],["en_w"]]],[0,"txr",R[116],R[145],N,N],[6,"R","betrusted_pac::i2c::txr","Reader of register TXR",N,N],[6,"W",E,"Writer for register TXR",N,N],[0,"rxr",R[116],R[146],N,N],[6,"R","betrusted_pac::i2c::rxr","Reader of register RXR",N,N],[6,"W",E,"Writer for register RXR",N,N],[0,"command",R[116],E,N,N],[3,"IACK_W",R[200],"Write proxy for field `IACK`",N,N],[3,R[206],E,R[124],N,N],[3,"ACK_W",E,"Write proxy for field `ACK`",N,N],[3,"WR_W",E,"Write proxy for field `WR`",N,N],[3,"RD_W",E,"Write proxy for field `RD`",N,N],[3,"STO_W",E,"Write proxy for field `STO`",N,N],[3,"STA_W",E,"Write proxy for field `STA`",N,N],[6,"R",E,"Reader of register COMMAND",N,N],[6,"W",E,"Writer for register COMMAND",N,N],[6,"IACK_R",E,"Reader of field `IACK`",N,N],[6,"RESVD_R",E,R[125],N,N],[6,"ACK_R",E,"Reader of field `ACK`",N,N],[6,"WR_R",E,"Reader of field `WR`",N,N],[6,"RD_R",E,"Reader of field `RD`",N,N],[6,"STO_R",E,"Reader of field `STO`",N,N],[6,"STA_R",E,"Reader of field `STA`",N,N],[11,R[9],E,R[118],15,[[],["w"]]],[11,R[119],E,R[120],15,[[],["w"]]],[11,"bit",E,R[117],15,[[["bool"]],["w"]]],[11,"bits",E,R[117],16,[[["u8"]],["w"]]],[11,R[9],E,R[118],17,[[],["w"]]],[11,R[119],E,R[120],17,[[],["w"]]],[11,"bit",E,R[117],17,[[["bool"]],["w"]]],[11,R[9],E,R[118],18,[[],["w"]]],[11,R[119],E,R[120],18,[[],["w"]]],[11,"bit",E,R[117],18,[[["bool"]],["w"]]],[11,R[9],E,R[118],19,[[],["w"]]],[11,R[119],E,R[120],19,[[],["w"]]],[11,"bit",E,R[117],19,[[["bool"]],["w"]]],[11,R[9],E,R[118],20,[[],["w"]]],[11,R[119],E,R[120],20,[[],["w"]]],[11,"bit",E,R[117],20,[[["bool"]],["w"]]],[11,R[9],E,R[118],21,[[],["w"]]],[11,R[119],E,R[120],21,[[],["w"]]],[11,"bit",E,R[117],21,[[["bool"]],["w"]]],[11,"iack",E,R[126],22,[[["self"]],["iack_r"]]],[11,"resvd",E,R[127],22,[[["self"]],["resvd_r"]]],[11,"ack",E,R[128],22,[[["self"]],["ack_r"]]],[11,"wr",E,R[129],22,[[["self"]],["wr_r"]]],[11,"rd",E,R[130],22,[[["self"]],["rd_r"]]],[11,"sto",E,R[131],22,[[["self"]],["sto_r"]]],[11,"sta",E,R[132],22,[[["self"]],["sta_r"]]],[11,"iack",E,R[126],23,[[["self"]],["iack_w"]]],[11,"resvd",E,R[127],23,[[["self"]],["resvd_w"]]],[11,"ack",E,R[128],23,[[["self"]],["ack_w"]]],[11,"wr",E,R[129],23,[[["self"]],["wr_w"]]],[11,"rd",E,R[130],23,[[["self"]],["rd_w"]]],[11,"sto",E,R[131],23,[[["self"]],["sto_w"]]],[11,"sta",E,R[132],23,[[["self"]],["sta_w"]]],[0,"status",R[116],E,N,N],[3,"IF_W",R[201],"Write proxy for field `IF`",N,N],[3,"TIP_W",E,"Write proxy for field `TIP`",N,N],[3,R[206],E,R[124],N,N],[3,R[207],E,"Write proxy for field `ArbLost`",N,N],[3,"BUSY_W",E,"Write proxy for field `Busy`",N,N],[3,"RXACK_W",E,"Write proxy for field `RxACK`",N,N],[6,"R",E,R[148],N,N],[6,"W",E,R[149],N,N],[6,"IF_R",E,"Reader of field `IF`",N,N],[6,"TIP_R",E,"Reader of field `TIP`",N,N],[6,"RESVD_R",E,R[125],N,N],[6,"ARBLOST_R",E,"Reader of field `ArbLost`",N,N],[6,"BUSY_R",E,"Reader of field `Busy`",N,N],[6,"RXACK_R",E,"Reader of field `RxACK`",N,N],[11,R[9],E,R[118],24,[[],["w"]]],[11,R[119],E,R[120],24,[[],["w"]]],[11,"bit",E,R[117],24,[[["bool"]],["w"]]],[11,R[9],E,R[118],25,[[],["w"]]],[11,R[119],E,R[120],25,[[],["w"]]],[11,"bit",E,R[117],25,[[["bool"]],["w"]]],[11,"bits",E,R[117],26,[[["u8"]],["w"]]],[11,R[9],E,R[118],27,[[],["w"]]],[11,R[119],E,R[120],27,[[],["w"]]],[11,"bit",E,R[117],27,[[["bool"]],["w"]]],[11,R[9],E,R[118],28,[[],["w"]]],[11,R[119],E,R[120],28,[[],["w"]]],[11,"bit",E,R[117],28,[[["bool"]],["w"]]],[11,R[9],E,R[118],29,[[],["w"]]],[11,R[119],E,R[120],29,[[],["w"]]],[11,"bit",E,R[117],29,[[["bool"]],["w"]]],[11,"if_",E,R[133],30,[[["self"]],["if_r"]]],[11,"tip",E,R[134],30,[[["self"]],["tip_r"]]],[11,"resvd",E,R[135],30,[[["self"]],["resvd_r"]]],[11,"arb_lost",E,R[136],30,[[["self"]],["arblost_r"]]],[11,"busy",E,R[137],30,[[["self"]],["busy_r"]]],[11,"rx_ack",E,R[138],30,[[["self"]],["rxack_r"]]],[11,"if_",E,R[133],31,[[["self"]],["if_w"]]],[11,"tip",E,R[134],31,[[["self"]],["tip_w"]]],[11,"resvd",E,R[135],31,[[["self"]],["resvd_w"]]],[11,"arb_lost",E,R[136],31,[[["self"]],["arblost_w"]]],[11,"busy",E,R[137],31,[[["self"]],["busy_w"]]],[11,"rx_ack",E,R[138],31,[[["self"]],["rxack_w"]]],[0,R[139],R[116],E,N,N],[6,"R","betrusted_pac::i2c::ev_status",R[165],N,N],[6,"W",E,R[166],N,N],[0,R[140],R[116],E,N,N],[6,"R","betrusted_pac::i2c::ev_pending",R[167],N,N],[6,"W",E,R[168],N,N],[0,R[141],R[116],E,N,N],[6,"R","betrusted_pac::i2c::ev_enable",R[169],N,N],[6,"W",E,R[170],N,N],[6,R[212],R[116],R[142],N,N],[6,R[213],E,R[143],N,N],[6,"CONTROL",E,R[144],N,N],[6,"TXR",E,R[145],N,N],[6,"RXR",E,R[146],N,N],[6,"COMMAND",E,R[144],N,N],[6,"STATUS",E,R[144],N,N],[6,R[185],E,R[144],N,N],[6,R[186],E,R[144],N,N],[6,R[187],E,R[144],N,N],[0,"reboot",R[95],"REBOOT",N,N],[3,R[112],R[155],R[113],N,N],[12,"ctrl",E,R[229],32,N],[12,"addr3",E,"0x04 - Bits 24-31 of `REBOOT_ADDR`.",32,N],[12,"addr2",E,"0x08 - Bits 16-23 of `REBOOT_ADDR`.",32,N],[12,"addr1",E,"0x0c - Bits 8-15 of `REBOOT_ADDR`.",32,N],[12,"addr0",E,"0x10 - Bits 0-7 of `REBOOT_ADDR`.",32,N],[0,"ctrl",E,E,N,N],[6,"R","betrusted_pac::reboot::ctrl",R[161],N,N],[6,"W",E,R[162],N,N],[0,"addr3",R[155],R[156],N,N],[6,"R","betrusted_pac::reboot::addr3","Reader of register ADDR3",N,N],[6,"W",E,"Writer for register ADDR3",N,N],[0,"addr2",R[155],R[157],N,N],[6,"R","betrusted_pac::reboot::addr2","Reader of register ADDR2",N,N],[6,"W",E,"Writer for register ADDR2",N,N],[0,"addr1",R[155],R[158],N,N],[6,"R","betrusted_pac::reboot::addr1","Reader of register ADDR1",N,N],[6,"W",E,"Writer for register ADDR1",N,N],[0,"addr0",R[155],R[159],N,N],[6,"R","betrusted_pac::reboot::addr0","Reader of register ADDR0",N,N],[6,"W",E,"Writer for register ADDR0",N,N],[6,"CTRL",R[155],R[144],N,N],[6,"ADDR3",E,R[156],N,N],[6,"ADDR2",E,R[157],N,N],[6,"ADDR1",E,R[158],N,N],[6,"ADDR0",E,R[159],N,N],[0,"ticktimer",R[95],R[217],N,N],[3,R[112],R[222],R[113],N,N],[12,"control",E,R[229],33,N],[12,"time5",E,"0x04 - Bits 40-47 of `TICKTIMER_TIME`. Elapsed time in…",33,N],[12,"time4",E,"0x08 - Bits 32-39 of `TICKTIMER_TIME`.",33,N],[12,"time3",E,"0x0c - Bits 24-31 of `TICKTIMER_TIME`.",33,N],[12,"time2",E,"0x10 - Bits 16-23 of `TICKTIMER_TIME`.",33,N],[12,"time1",E,"0x14 - Bits 8-15 of `TICKTIMER_TIME`.",33,N],[12,"time0",E,"0x18 - Bits 0-7 of `TICKTIMER_TIME`.",33,N],[0,"control",E,E,N,N],[3,"RESET_W",R[230],"Write proxy for field `reset`",N,N],[3,"PAUSE_W",E,"Write proxy for field `pause`",N,N],[6,"R",E,R[218],N,N],[6,"W",E,R[219],N,N],[6,"RESET_R",E,"Reader of field `reset`",N,N],[6,"PAUSE_R",E,"Reader of field `pause`",N,N],[11,R[9],E,R[118],34,[[],["w"]]],[11,R[119],E,R[120],34,[[],["w"]]],[11,"bit",E,R[117],34,[[["bool"]],["w"]]],[11,R[9],E,R[118],35,[[],["w"]]],[11,R[119],E,R[120],35,[[],["w"]]],[11,"bit",E,R[117],35,[[["bool"]],["w"]]],[11,"reset",E,R[220],36,[[["self"]],["reset_r"]]],[11,"pause",E,R[221],36,[[["self"]],["pause_r"]]],[11,"reset",E,R[220],37,[[["self"]],["reset_w"]]],[11,"pause",E,R[221],37,[[["self"]],["pause_w"]]],[0,"time5",R[222],R[223],N,N],[6,"R","betrusted_pac::ticktimer::time5","Reader of register TIME5",N,N],[6,"W",E,"Writer for register TIME5",N,N],[0,"time4",R[222],R[224],N,N],[6,"R","betrusted_pac::ticktimer::time4","Reader of register TIME4",N,N],[6,"W",E,"Writer for register TIME4",N,N],[0,"time3",R[222],R[225],N,N],[6,"R","betrusted_pac::ticktimer::time3","Reader of register TIME3",N,N],[6,"W",E,"Writer for register TIME3",N,N],[0,"time2",R[222],R[226],N,N],[6,"R","betrusted_pac::ticktimer::time2","Reader of register TIME2",N,N],[6,"W",E,"Writer for register TIME2",N,N],[0,"time1",R[222],R[227],N,N],[6,"R","betrusted_pac::ticktimer::time1","Reader of register TIME1",N,N],[6,"W",E,"Writer for register TIME1",N,N],[0,"time0",R[222],R[228],N,N],[6,"R","betrusted_pac::ticktimer::time0","Reader of register TIME0",N,N],[6,"W",E,"Writer for register TIME0",N,N],[6,"CONTROL",R[222],R[144],N,N],[6,"TIME5",E,R[223],N,N],[6,"TIME4",E,R[224],N,N],[6,"TIME3",E,R[225],N,N],[6,"TIME2",E,R[226],N,N],[6,"TIME1",E,R[227],N,N],[6,"TIME0",E,R[228],N,N],[0,"ctrl",R[95],"CTRL",N,N],[3,R[112],R[97],R[113],N,N],[12,"reset",E,R[229],38,N],[12,R[96],E,"0x04 - Bits 24-31 of `CTRL_SCRATCH`.",38,N],[12,R[98],E,"0x08 - Bits 16-23 of `CTRL_SCRATCH`.",38,N],[12,R[99],E,"0x0c - Bits 8-15 of `CTRL_SCRATCH`.",38,N],[12,"scratch0",E,"0x10 - Bits 0-7 of `CTRL_SCRATCH`.",38,N],[12,R[100],E,"0x14 - Bits 24-31 of `CTRL_BUS_ERRORS`.",38,N],[12,R[101],E,"0x18 - Bits 16-23 of `CTRL_BUS_ERRORS`.",38,N],[12,R[102],E,"0x1c - Bits 8-15 of `CTRL_BUS_ERRORS`.",38,N],[12,R[103],E,"0x20 - Bits 0-7 of `CTRL_BUS_ERRORS`.",38,N],[0,"reset",E,E,N,N],[6,"R","betrusted_pac::ctrl::reset","Reader of register RESET",N,N],[6,"W",E,"Writer for register RESET",N,N],[0,R[96],R[97],R[104],N,N],[6,"R","betrusted_pac::ctrl::scratch3","Reader of register SCRATCH3",N,N],[6,"W",E,"Writer for register SCRATCH3",N,N],[0,R[98],R[97],R[105],N,N],[6,"R","betrusted_pac::ctrl::scratch2","Reader of register SCRATCH2",N,N],[6,"W",E,"Writer for register SCRATCH2",N,N],[0,R[99],R[97],R[106],N,N],[6,"R","betrusted_pac::ctrl::scratch1","Reader of register SCRATCH1",N,N],[6,"W",E,"Writer for register SCRATCH1",N,N],[0,"scratch0",R[97],R[107],N,N],[6,"R","betrusted_pac::ctrl::scratch0","Reader of register SCRATCH0",N,N],[6,"W",E,"Writer for register SCRATCH0",N,N],[0,R[100],R[97],R[108],N,N],[6,"R","betrusted_pac::ctrl::bus_errors3","Reader of register BUS_ERRORS3",N,N],[6,"W",E,"Writer for register BUS_ERRORS3",N,N],[0,R[101],R[97],R[109],N,N],[6,"R","betrusted_pac::ctrl::bus_errors2","Reader of register BUS_ERRORS2",N,N],[6,"W",E,"Writer for register BUS_ERRORS2",N,N],[0,R[102],R[97],R[110],N,N],[6,"R","betrusted_pac::ctrl::bus_errors1","Reader of register BUS_ERRORS1",N,N],[6,"W",E,"Writer for register BUS_ERRORS1",N,N],[0,R[103],R[97],R[111],N,N],[6,"R","betrusted_pac::ctrl::bus_errors0","Reader of register BUS_ERRORS0",N,N],[6,"W",E,"Writer for register BUS_ERRORS0",N,N],[6,"RESET",R[97],R[144],N,N],[6,"SCRATCH3",E,R[104],N,N],[6,"SCRATCH2",E,R[105],N,N],[6,"SCRATCH1",E,R[106],N,N],[6,"SCRATCH0",E,R[107],N,N],[6,R[208],E,R[108],N,N],[6,R[209],E,R[109],N,N],[6,R[210],E,R[110],N,N],[6,R[211],E,R[111],N,N],[0,"messible",R[95],R[89],N,N],[3,R[112],R[147],R[113],N,N],[12,"in_",E,"0x00 - Write half of the FIFO to send data out the…",39,N],[12,"out",E,"0x04 - Read half of the FIFO to receive data on the…",39,N],[12,"status",E,"0x08 - ",39,N],[0,"in_",E,R[152],N,N],[6,"R","betrusted_pac::messible::in_","Reader of register IN",N,N],[6,"W",E,"Writer for register IN",N,N],[0,"out",R[147],R[153],N,N],[6,"R","betrusted_pac::messible::out","Reader of register OUT",N,N],[6,"W",E,"Writer for register OUT",N,N],[0,"status",R[147],E,N,N],[3,"FULL_W",R[202],"Write proxy for field `full`",N,N],[3,"HAVE_W",E,"Write proxy for field `have`",N,N],[6,"R",E,R[148],N,N],[6,"W",E,R[149],N,N],[6,"FULL_R",E,"Reader of field `full`",N,N],[6,"HAVE_R",E,"Reader of field `have`",N,N],[11,R[9],E,R[118],40,[[],["w"]]],[11,R[119],E,R[120],40,[[],["w"]]],[11,"bit",E,R[117],40,[[["bool"]],["w"]]],[11,R[9],E,R[118],41,[[],["w"]]],[11,R[119],E,R[120],41,[[],["w"]]],[11,"bit",E,R[117],41,[[["bool"]],["w"]]],[11,"full",E,R[150],42,[[["self"]],["full_r"]]],[11,"have",E,R[151],42,[[["self"]],["have_r"]]],[11,"full",E,R[150],43,[[["self"]],["full_w"]]],[11,"have",E,R[151],43,[[["self"]],["have_w"]]],[6,"IN",R[147],R[152],N,N],[6,"OUT",E,R[153],N,N],[6,"STATUS",E,R[144],N,N],[0,"timer0",R[95],R[92],N,N],[3,R[112],R[163],R[113],N,N],[12,"load3",E,"0x00 - Bits 24-31 of `TIMER0_LOAD`. Load value when Timer…",44,N],[12,"load2",E,"0x04 - Bits 16-23 of `TIMER0_LOAD`.",44,N],[12,"load1",E,"0x08 - Bits 8-15 of `TIMER0_LOAD`.",44,N],[12,"load0",E,"0x0c - Bits 0-7 of `TIMER0_LOAD`.",44,N],[12,"reload3",E,"0x10 - Bits 24-31 of `TIMER0_RELOAD`. Reload value when…",44,N],[12,"reload2",E,"0x14 - Bits 16-23 of `TIMER0_RELOAD`.",44,N],[12,"reload1",E,"0x18 - Bits 8-15 of `TIMER0_RELOAD`.",44,N],[12,"reload0",E,"0x1c - Bits 0-7 of `TIMER0_RELOAD`.",44,N],[12,"en",E,"0x20 - Enable of the Timer.Set if to 1 to enable/start the…",44,N],[12,R[164],E,"0x24 - Update of the current countdown value.A write to…",44,N],[12,"value3",E,"0x28 - Bits 24-31 of `TIMER0_VALUE`. Latched countdown value",44,N],[12,"value2",E,"0x2c - Bits 16-23 of `TIMER0_VALUE`.",44,N],[12,"value1",E,"0x30 - Bits 8-15 of `TIMER0_VALUE`.",44,N],[12,"value0",E,"0x34 - Bits 0-7 of `TIMER0_VALUE`.",44,N],[12,R[139],E,"0x38 - ",44,N],[12,R[140],E,"0x3c - ",44,N],[12,R[141],E,"0x40 - ",44,N],[0,"load3",E,R[171],N,N],[6,"R","betrusted_pac::timer0::load3","Reader of register LOAD3",N,N],[6,"W",E,"Writer for register LOAD3",N,N],[0,"load2",R[163],R[172],N,N],[6,"R","betrusted_pac::timer0::load2","Reader of register LOAD2",N,N],[6,"W",E,"Writer for register LOAD2",N,N],[0,"load1",R[163],R[173],N,N],[6,"R","betrusted_pac::timer0::load1","Reader of register LOAD1",N,N],[6,"W",E,"Writer for register LOAD1",N,N],[0,"load0",R[163],R[174],N,N],[6,"R","betrusted_pac::timer0::load0","Reader of register LOAD0",N,N],[6,"W",E,"Writer for register LOAD0",N,N],[0,"reload3",R[163],R[175],N,N],[6,"R","betrusted_pac::timer0::reload3","Reader of register RELOAD3",N,N],[6,"W",E,"Writer for register RELOAD3",N,N],[0,"reload2",R[163],R[176],N,N],[6,"R","betrusted_pac::timer0::reload2","Reader of register RELOAD2",N,N],[6,"W",E,"Writer for register RELOAD2",N,N],[0,"reload1",R[163],R[177],N,N],[6,"R","betrusted_pac::timer0::reload1","Reader of register RELOAD1",N,N],[6,"W",E,"Writer for register RELOAD1",N,N],[0,"reload0",R[163],R[178],N,N],[6,"R","betrusted_pac::timer0::reload0","Reader of register RELOAD0",N,N],[6,"W",E,"Writer for register RELOAD0",N,N],[0,"en",R[163],R[179],N,N],[6,"R","betrusted_pac::timer0::en","Reader of register EN",N,N],[6,"W",E,"Writer for register EN",N,N],[0,R[164],R[163],R[180],N,N],[6,"R","betrusted_pac::timer0::update_value","Reader of register UPDATE_VALUE",N,N],[6,"W",E,"Writer for register UPDATE_VALUE",N,N],[0,"value3",R[163],R[181],N,N],[6,"R","betrusted_pac::timer0::value3","Reader of register VALUE3",N,N],[6,"W",E,"Writer for register VALUE3",N,N],[0,"value2",R[163],R[182],N,N],[6,"R","betrusted_pac::timer0::value2","Reader of register VALUE2",N,N],[6,"W",E,"Writer for register VALUE2",N,N],[0,"value1",R[163],R[183],N,N],[6,"R","betrusted_pac::timer0::value1","Reader of register VALUE1",N,N],[6,"W",E,"Writer for register VALUE1",N,N],[0,"value0",R[163],R[184],N,N],[6,"R","betrusted_pac::timer0::value0","Reader of register VALUE0",N,N],[6,"W",E,"Writer for register VALUE0",N,N],[0,R[139],R[163],E,N,N],[6,"R","betrusted_pac::timer0::ev_status",R[165],N,N],[6,"W",E,R[166],N,N],[0,R[140],R[163],E,N,N],[6,"R","betrusted_pac::timer0::ev_pending",R[167],N,N],[6,"W",E,R[168],N,N],[0,R[141],R[163],E,N,N],[6,"R","betrusted_pac::timer0::ev_enable",R[169],N,N],[6,"W",E,R[170],N,N],[6,"LOAD3",R[163],R[171],N,N],[6,"LOAD2",E,R[172],N,N],[6,"LOAD1",E,R[173],N,N],[6,"LOAD0",E,R[174],N,N],[6,"RELOAD3",E,R[175],N,N],[6,"RELOAD2",E,R[176],N,N],[6,"RELOAD1",E,R[177],N,N],[6,"RELOAD0",E,R[178],N,N],[6,"EN",E,R[179],N,N],[6,R[214],E,R[180],N,N],[6,"VALUE3",E,R[181],N,N],[6,"VALUE2",E,R[182],N,N],[6,"VALUE1",E,R[183],N,N],[6,"VALUE0",E,R[184],N,N],[6,R[185],E,R[144],N,N],[6,R[186],E,R[144],N,N],[6,R[187],E,R[144],N,N],[0,"version",R[95],R[91],N,N],[3,R[112],R[188],R[113],N,N],[12,"major",E,R[229],45,N],[12,"minor",E,"0x04 - ",45,N],[12,"revision",E,"0x08 - ",45,N],[12,"gitrev3",E,"0x0c - Bits 24-31 of `VERSION_GITREV`.",45,N],[12,"gitrev2",E,"0x10 - Bits 16-23 of `VERSION_GITREV`.",45,N],[12,"gitrev1",E,"0x14 - Bits 8-15 of `VERSION_GITREV`.",45,N],[12,"gitrev0",E,"0x18 - Bits 0-7 of `VERSION_GITREV`.",45,N],[12,R[189],E,"0x1c - Bits 8-9 of `VERSION_GITEXTRA`.",45,N],[12,R[190],E,"0x20 - Bits 0-7 of `VERSION_GITEXTRA`.",45,N],[12,"dirty",E,"0x24 - ",45,N],[12,"model",E,"0x28 - ",45,N],[0,"major",E,E,N,N],[6,"R","betrusted_pac::version::major","Reader of register MAJOR",N,N],[6,"W",E,"Writer for register MAJOR",N,N],[0,"minor",R[188],E,N,N],[6,"R","betrusted_pac::version::minor","Reader of register MINOR",N,N],[6,"W",E,"Writer for register MINOR",N,N],[0,"revision",R[188],E,N,N],[6,"R","betrusted_pac::version::revision","Reader of register REVISION",N,N],[6,"W",E,"Writer for register REVISION",N,N],[0,"gitrev3",R[188],R[191],N,N],[6,"R","betrusted_pac::version::gitrev3","Reader of register GITREV3",N,N],[6,"W",E,"Writer for register GITREV3",N,N],[0,"gitrev2",R[188],R[192],N,N],[6,"R","betrusted_pac::version::gitrev2","Reader of register GITREV2",N,N],[6,"W",E,"Writer for register GITREV2",N,N],[0,"gitrev1",R[188],R[193],N,N],[6,"R","betrusted_pac::version::gitrev1","Reader of register GITREV1",N,N],[6,"W",E,"Writer for register GITREV1",N,N],[0,"gitrev0",R[188],R[194],N,N],[6,"R","betrusted_pac::version::gitrev0","Reader of register GITREV0",N,N],[6,"W",E,"Writer for register GITREV0",N,N],[0,R[189],R[188],R[195],N,N],[6,"R","betrusted_pac::version::gitextra1","Reader of register GITEXTRA1",N,N],[6,"W",E,"Writer for register GITEXTRA1",N,N],[0,R[190],R[188],R[196],N,N],[6,"R","betrusted_pac::version::gitextra0","Reader of register GITEXTRA0",N,N],[6,"W",E,"Writer for register GITEXTRA0",N,N],[0,"dirty",R[188],E,N,N],[6,"R","betrusted_pac::version::dirty","Reader of register DIRTY",N,N],[6,"W",E,"Writer for register DIRTY",N,N],[0,"model",R[188],E,N,N],[6,"R","betrusted_pac::version::model","Reader of register MODEL",N,N],[6,"W",E,"Writer for register MODEL",N,N],[6,"MAJOR",R[188],R[144],N,N],[6,"MINOR",E,R[144],N,N],[6,"REVISION",E,R[144],N,N],[6,"GITREV3",E,R[191],N,N],[6,"GITREV2",E,R[192],N,N],[6,"GITREV1",E,R[193],N,N],[6,"GITREV0",E,R[194],N,N],[6,R[215],E,R[195],N,N],[6,R[216],E,R[196],N,N],[6,"DIRTY",E,R[144],N,N],[6,"MODEL",E,R[144],N,N],[11,"ptr",R[95],R[197],46,[[]]],[11,"ptr",E,R[197],47,[[]]],[11,"ptr",E,R[197],48,[[]]],[11,"ptr",E,R[197],49,[[]]],[11,"ptr",E,R[197],50,[[]]],[11,"ptr",E,R[197],51,[[]]],[11,"ptr",E,R[197],52,[[]]],[11,"ptr",E,R[197],53,[[]]],[11,"ptr",E,R[197],54,[[]]],[11,"take",E,"Returns all the peripherals once",0,[[],["option"]]],[11,"steal",E,"Unchecked version of `Peripherals::take`",0,[[],["self"]]],[11,R[16],E,E,46,[[[U]],[R[1]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[17],E,E,46,[[],[R[1]]]],[11,R[19],E,E,46,[[["self"]],[T]]],[11,R[18],E,E,46,[[["self"]],[T]]],[11,R[20],E,E,46,[[["self"]],[R[69]]]],[11,R[16],E,E,47,[[[U]],[R[1]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[17],E,E,47,[[],[R[1]]]],[11,R[19],E,E,47,[[["self"]],[T]]],[11,R[18],E,E,47,[[["self"]],[T]]],[11,R[20],E,E,47,[[["self"]],[R[69]]]],[11,R[16],E,E,48,[[[U]],[R[1]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[17],E,E,48,[[],[R[1]]]],[11,R[19],E,E,48,[[["self"]],[T]]],[11,R[18],E,E,48,[[["self"]],[T]]],[11,R[20],E,E,48,[[["self"]],[R[69]]]],[11,R[16],E,E,49,[[[U]],[R[1]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[17],E,E,49,[[],[R[1]]]],[11,R[19],E,E,49,[[["self"]],[T]]],[11,R[18],E,E,49,[[["self"]],[T]]],[11,R[20],E,E,49,[[["self"]],[R[69]]]],[11,R[16],E,E,50,[[[U]],[R[1]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[17],E,E,50,[[],[R[1]]]],[11,R[19],E,E,50,[[["self"]],[T]]],[11,R[18],E,E,50,[[["self"]],[T]]],[11,R[20],E,E,50,[[["self"]],[R[69]]]],[11,R[16],E,E,51,[[[U]],[R[1]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[17],E,E,51,[[],[R[1]]]],[11,R[19],E,E,51,[[["self"]],[T]]],[11,R[18],E,E,51,[[["self"]],[T]]],[11,R[20],E,E,51,[[["self"]],[R[69]]]],[11,R[16],E,E,52,[[[U]],[R[1]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[17],E,E,52,[[],[R[1]]]],[11,R[19],E,E,52,[[["self"]],[T]]],[11,R[18],E,E,52,[[["self"]],[T]]],[11,R[20],E,E,52,[[["self"]],[R[69]]]],[11,R[16],E,E,53,[[[U]],[R[1]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[17],E,E,53,[[],[R[1]]]],[11,R[19],E,E,53,[[["self"]],[T]]],[11,R[18],E,E,53,[[["self"]],[T]]],[11,R[20],E,E,53,[[["self"]],[R[69]]]],[11,R[16],E,E,54,[[[U]],[R[1]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[17],E,E,54,[[],[R[1]]]],[11,R[19],E,E,54,[[["self"]],[T]]],[11,R[18],E,E,54,[[["self"]],[T]]],[11,R[20],E,E,54,[[["self"]],[R[69]]]],[11,R[16],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[17],E,E,0,[[],[R[1]]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[69]]]],[11,R[16],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[17],E,E,1,[[],[R[1]]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[69]]]],[11,R[16],R[198],E,4,[[[U]],[R[1]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[17],E,E,4,[[],[R[1]]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[R[69]]]],[11,R[16],E,E,5,[[[U]],[R[1]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[17],E,E,5,[[],[R[1]]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[R[69]]]],[11,R[16],E,E,6,[[[U]],[R[1]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[17],E,E,6,[[],[R[1]]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[20],E,E,6,[[["self"]],[R[69]]]],[11,R[16],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[17],E,E,2,[[],[R[1]]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[69]]]],[11,R[16],R[160],E,7,[[[U]],[R[1]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[17],E,E,7,[[],[R[1]]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[20],E,E,7,[[["self"]],[R[69]]]],[11,R[16],R[154],E,8,[[[U]],[R[1]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[17],E,E,8,[[],[R[1]]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[20],E,E,8,[[["self"]],[R[69]]]],[11,R[16],R[116],E,9,[[[U]],[R[1]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[17],E,E,9,[[],[R[1]]]],[11,R[19],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[20],E,E,9,[[["self"]],[R[69]]]],[11,R[16],R[199],E,10,[[[U]],[R[1]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[17],E,E,10,[[],[R[1]]]],[11,R[19],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[20],E,E,10,[[["self"]],[R[69]]]],[11,R[16],E,E,11,[[[U]],[R[1]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[17],E,E,11,[[],[R[1]]]],[11,R[19],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[T]]],[11,R[20],E,E,11,[[["self"]],[R[69]]]],[11,R[16],E,E,12,[[[U]],[R[1]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[17],E,E,12,[[],[R[1]]]],[11,R[19],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[T]]],[11,R[20],E,E,12,[[["self"]],[R[69]]]],[11,R[16],R[200],E,15,[[[U]],[R[1]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[17],E,E,15,[[],[R[1]]]],[11,R[19],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[T]]],[11,R[20],E,E,15,[[["self"]],[R[69]]]],[11,R[16],E,E,16,[[[U]],[R[1]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[17],E,E,16,[[],[R[1]]]],[11,R[19],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[T]]],[11,R[20],E,E,16,[[["self"]],[R[69]]]],[11,R[16],E,E,17,[[[U]],[R[1]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[17],E,E,17,[[],[R[1]]]],[11,R[19],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[T]]],[11,R[20],E,E,17,[[["self"]],[R[69]]]],[11,R[16],E,E,18,[[[U]],[R[1]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[17],E,E,18,[[],[R[1]]]],[11,R[19],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[T]]],[11,R[20],E,E,18,[[["self"]],[R[69]]]],[11,R[16],E,E,19,[[[U]],[R[1]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[17],E,E,19,[[],[R[1]]]],[11,R[19],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[T]]],[11,R[20],E,E,19,[[["self"]],[R[69]]]],[11,R[16],E,E,20,[[[U]],[R[1]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[17],E,E,20,[[],[R[1]]]],[11,R[19],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[T]]],[11,R[20],E,E,20,[[["self"]],[R[69]]]],[11,R[16],E,E,21,[[[U]],[R[1]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[17],E,E,21,[[],[R[1]]]],[11,R[19],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[T]]],[11,R[20],E,E,21,[[["self"]],[R[69]]]],[11,R[16],R[201],E,24,[[[U]],[R[1]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[17],E,E,24,[[],[R[1]]]],[11,R[19],E,E,24,[[["self"]],[T]]],[11,R[18],E,E,24,[[["self"]],[T]]],[11,R[20],E,E,24,[[["self"]],[R[69]]]],[11,R[16],E,E,25,[[[U]],[R[1]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[17],E,E,25,[[],[R[1]]]],[11,R[19],E,E,25,[[["self"]],[T]]],[11,R[18],E,E,25,[[["self"]],[T]]],[11,R[20],E,E,25,[[["self"]],[R[69]]]],[11,R[16],E,E,26,[[[U]],[R[1]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[17],E,E,26,[[],[R[1]]]],[11,R[19],E,E,26,[[["self"]],[T]]],[11,R[18],E,E,26,[[["self"]],[T]]],[11,R[20],E,E,26,[[["self"]],[R[69]]]],[11,R[16],E,E,27,[[[U]],[R[1]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[17],E,E,27,[[],[R[1]]]],[11,R[19],E,E,27,[[["self"]],[T]]],[11,R[18],E,E,27,[[["self"]],[T]]],[11,R[20],E,E,27,[[["self"]],[R[69]]]],[11,R[16],E,E,28,[[[U]],[R[1]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[17],E,E,28,[[],[R[1]]]],[11,R[19],E,E,28,[[["self"]],[T]]],[11,R[18],E,E,28,[[["self"]],[T]]],[11,R[20],E,E,28,[[["self"]],[R[69]]]],[11,R[16],E,E,29,[[[U]],[R[1]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[17],E,E,29,[[],[R[1]]]],[11,R[19],E,E,29,[[["self"]],[T]]],[11,R[18],E,E,29,[[["self"]],[T]]],[11,R[20],E,E,29,[[["self"]],[R[69]]]],[11,R[16],R[155],E,32,[[[U]],[R[1]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[17],E,E,32,[[],[R[1]]]],[11,R[19],E,E,32,[[["self"]],[T]]],[11,R[18],E,E,32,[[["self"]],[T]]],[11,R[20],E,E,32,[[["self"]],[R[69]]]],[11,R[16],R[222],E,33,[[[U]],[R[1]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[17],E,E,33,[[],[R[1]]]],[11,R[19],E,E,33,[[["self"]],[T]]],[11,R[18],E,E,33,[[["self"]],[T]]],[11,R[20],E,E,33,[[["self"]],[R[69]]]],[11,R[16],R[230],E,34,[[[U]],[R[1]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[17],E,E,34,[[],[R[1]]]],[11,R[19],E,E,34,[[["self"]],[T]]],[11,R[18],E,E,34,[[["self"]],[T]]],[11,R[20],E,E,34,[[["self"]],[R[69]]]],[11,R[16],E,E,35,[[[U]],[R[1]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[17],E,E,35,[[],[R[1]]]],[11,R[19],E,E,35,[[["self"]],[T]]],[11,R[18],E,E,35,[[["self"]],[T]]],[11,R[20],E,E,35,[[["self"]],[R[69]]]],[11,R[16],R[97],E,38,[[[U]],[R[1]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[17],E,E,38,[[],[R[1]]]],[11,R[19],E,E,38,[[["self"]],[T]]],[11,R[18],E,E,38,[[["self"]],[T]]],[11,R[20],E,E,38,[[["self"]],[R[69]]]],[11,R[16],R[147],E,39,[[[U]],[R[1]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[17],E,E,39,[[],[R[1]]]],[11,R[19],E,E,39,[[["self"]],[T]]],[11,R[18],E,E,39,[[["self"]],[T]]],[11,R[20],E,E,39,[[["self"]],[R[69]]]],[11,R[16],R[202],E,40,[[[U]],[R[1]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[17],E,E,40,[[],[R[1]]]],[11,R[19],E,E,40,[[["self"]],[T]]],[11,R[18],E,E,40,[[["self"]],[T]]],[11,R[20],E,E,40,[[["self"]],[R[69]]]],[11,R[16],E,E,41,[[[U]],[R[1]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[17],E,E,41,[[],[R[1]]]],[11,R[19],E,E,41,[[["self"]],[T]]],[11,R[18],E,E,41,[[["self"]],[T]]],[11,R[20],E,E,41,[[["self"]],[R[69]]]],[11,R[16],R[163],E,44,[[[U]],[R[1]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[17],E,E,44,[[],[R[1]]]],[11,R[19],E,E,44,[[["self"]],[T]]],[11,R[18],E,E,44,[[["self"]],[T]]],[11,R[20],E,E,44,[[["self"]],[R[69]]]],[11,R[16],R[188],E,45,[[[U]],[R[1]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[17],E,E,45,[[],[R[1]]]],[11,R[19],E,E,45,[[["self"]],[T]]],[11,R[18],E,E,45,[[["self"]],[T]]],[11,R[20],E,E,45,[[["self"]],[R[69]]]],[11,R[203],R[95],E,55,[[]]],[11,R[203],E,E,56,[[]]],[11,R[203],E,E,57,[[]]],[11,R[203],E,E,58,[[]]],[11,R[203],E,E,59,[[]]],[11,R[203],E,E,60,[[]]],[11,R[203],E,E,61,[[]]],[11,R[203],E,E,62,[[]]],[11,R[203],E,E,63,[[]]],[11,R[203],E,E,64,[[]]],[11,R[203],E,E,65,[[]]],[11,R[203],E,E,66,[[]]],[11,R[203],E,E,67,[[]]],[11,R[203],E,E,68,[[]]],[11,R[203],E,E,69,[[]]],[11,R[203],E,E,70,[[]]],[11,R[203],E,E,71,[[]]],[11,R[203],E,E,72,[[]]],[11,R[203],E,E,73,[[]]],[11,R[203],E,E,74,[[]]],[11,R[203],E,E,75,[[]]],[11,R[203],E,E,76,[[]]],[11,R[203],E,E,77,[[]]],[11,R[203],E,E,78,[[]]],[11,R[203],E,E,79,[[]]],[11,R[203],E,E,80,[[]]],[11,R[203],E,E,81,[[]]],[11,R[203],E,E,82,[[]]],[11,R[203],E,E,83,[[]]],[11,R[203],E,E,84,[[]]],[11,R[203],E,E,85,[[]]],[11,R[203],E,E,86,[[]]],[11,R[203],E,E,87,[[]]],[11,R[203],E,E,88,[[]]],[11,R[203],E,E,89,[[]]],[11,R[203],E,E,90,[[]]],[11,R[203],E,E,91,[[]]],[11,R[203],E,E,92,[[]]],[11,R[203],E,E,93,[[]]],[11,R[203],E,E,94,[[]]],[11,R[203],E,E,95,[[]]],[11,R[203],E,E,96,[[]]],[11,R[203],E,E,97,[[]]],[11,R[203],E,E,98,[[]]],[11,R[203],E,E,99,[[]]],[11,R[203],E,E,100,[[]]],[11,R[203],E,E,101,[[]]],[11,R[203],E,E,102,[[]]],[11,R[203],E,E,103,[[]]],[11,R[203],E,E,104,[[]]],[11,R[203],E,E,105,[[]]],[11,R[203],E,E,106,[[]]],[11,R[203],E,E,107,[[]]],[11,R[203],E,E,108,[[]]],[11,R[203],E,E,109,[[]]],[11,R[203],E,E,110,[[]]],[11,R[203],E,E,111,[[]]],[11,R[203],E,E,112,[[]]],[11,R[203],E,E,113,[[]]],[11,R[203],E,E,114,[[]]],[11,R[203],E,E,115,[[]]],[11,R[203],E,E,116,[[]]],[11,R[203],E,E,117,[[]]],[11,R[203],E,E,118,[[]]],[11,R[203],E,E,119,[[]]],[11,R[203],E,E,120,[[]]],[11,R[203],E,E,121,[[]]],[11,R[203],E,E,122,[[]]],[11,R[203],E,E,123,[[]]],[11,R[203],E,E,124,[[]]],[11,R[203],E,E,125,[[]]],[11,R[203],E,E,126,[[]]],[11,R[203],E,E,127,[[]]],[11,R[203],E,E,128,[[]]],[11,"deref",E,E,46,[[["self"]]]],[11,"deref",E,E,47,[[["self"]]]],[11,"deref",E,E,48,[[["self"]]]],[11,"deref",E,E,49,[[["self"]]]],[11,"deref",E,E,50,[[["self"]]]],[11,"deref",E,E,51,[[["self"]]]],[11,"deref",E,E,52,[[["self"]]]],[11,"deref",E,E,53,[[["self"]]]],[11,"deref",E,E,54,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],[R[80]]],[R[1]]]],[11,"eq",R[198],E,5,[[["self"],["fi"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["variant"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["variant"]],["bool"]]],[11,"clone",R[95],E,1,[[["self"]],[R[81]]]],[11,"clone",R[198],E,2,[[["self"]],["variant"]]],[11,"nr",R[95],E,1,[[["self"]],["u8"]]]],"p":[[3,R[204]],[4,R[63]],[4,"Variant"],[8,R[205]],[3,"Reg"],[3,"R"],[3,"W"],[3,R[112]],[3,R[112]],[3,R[112]],[3,R[206]],[3,"IEN_W"],[3,"EN_W"],[6,"R"],[6,"W"],[3,"IACK_W"],[3,R[206]],[3,"ACK_W"],[3,"WR_W"],[3,"RD_W"],[3,"STO_W"],[3,"STA_W"],[6,"R"],[6,"W"],[3,"IF_W"],[3,"TIP_W"],[3,R[206]],[3,R[207]],[3,"BUSY_W"],[3,"RXACK_W"],[6,"R"],[6,"W"],[3,R[112]],[3,R[112]],[3,"RESET_W"],[3,"PAUSE_W"],[6,"R"],[6,"W"],[3,R[112]],[3,R[112]],[3,"FULL_W"],[3,"HAVE_W"],[6,"R"],[6,"W"],[3,R[112]],[3,R[112]],[3,"RGB"],[3,R[90]],[3,"I2C"],[3,"REBOOT"],[3,R[217]],[3,"CTRL"],[3,R[89]],[3,R[92]],[3,R[91]],[6,"DAT"],[6,"ADDR"],[6,"CTRL"],[6,"RAW"],[6,"CFG1"],[6,"CFG2"],[6,"CFG3"],[6,"CFG4"],[6,"STAT1"],[6,"STAT2"],[6,"STAT3"],[6,"STAT4"],[6,R[212]],[6,R[213]],[6,"CONTROL"],[6,"TXR"],[6,"RXR"],[6,"COMMAND"],[6,"STATUS"],[6,R[185]],[6,R[186]],[6,R[187]],[6,"CTRL"],[6,"ADDR3"],[6,"ADDR2"],[6,"ADDR1"],[6,"ADDR0"],[6,"CONTROL"],[6,"TIME5"],[6,"TIME4"],[6,"TIME3"],[6,"TIME2"],[6,"TIME1"],[6,"TIME0"],[6,"RESET"],[6,"SCRATCH3"],[6,"SCRATCH2"],[6,"SCRATCH1"],[6,"SCRATCH0"],[6,R[208]],[6,R[209]],[6,R[210]],[6,R[211]],[6,"IN"],[6,"OUT"],[6,"STATUS"],[6,"LOAD3"],[6,"LOAD2"],[6,"LOAD1"],[6,"LOAD0"],[6,"RELOAD3"],[6,"RELOAD2"],[6,"RELOAD1"],[6,"RELOAD0"],[6,"EN"],[6,R[214]],[6,"VALUE3"],[6,"VALUE2"],[6,"VALUE1"],[6,"VALUE0"],[6,R[185]],[6,R[186]],[6,R[187]],[6,"MAJOR"],[6,"MINOR"],[6,"REVISION"],[6,"GITREV3"],[6,"GITREV2"],[6,"GITREV1"],[6,"GITREV0"],[6,R[215]],[6,R[216]],[6,"DIRTY"],[6,"MODEL"]]};
searchIndex["bit_field"]={"doc":"Provides the abstraction of a bit field, which allows for…","i":[[8,R[13],"bit_field","A generic trait which provides methods for extracting and…",N,N],[10,R[4],E,"Returns the length, eg number of bits, in this bit field.",0,[[],[R[3]]]],[10,R[5],E,R[6],0,[[["self"],[R[3]]],["bool"]]],[10,R[7],E,R[8],0,[[["self"],["range",[R[3]]],[R[3]]],["self"]]],[10,R[9],E,R[10],0,[[["self"],[R[3]],["bool"]],["self"]]],[10,R[11],E,R[12],0,[[["self"],["range",[R[3]]],[R[3]]],["self"]]],[8,R[14],E,E,N,N],[10,R[4],E,"Returns the length, eg number of bits, in this bit array.",1,[[["self"]],[R[3]]]],[10,R[5],E,R[6],1,[[["self"],[R[3]]],["bool"]]],[10,R[7],E,R[8],1,[[["self"],["range",[R[3]]],[R[3]]],[T]]],[10,R[9],E,R[10],1,[[["self"],[R[3]],["bool"]]]],[10,R[11],E,R[12],1,[[["self"],[R[3]],["range",[R[3]]],[T]]]]],"p":[[8,R[13]],[8,R[14]]]};
searchIndex["r0"]={"doc":"Initialization code (\"crt0\") written in Rust","i":[[5,"init_data","r0","Initializes the `.data` section",N,[[]]],[5,"run_init_array",E,E,N,[[]]],[5,"zero_bss",E,"Zeroes the `.bss` section",N,[[]]],[14,"pre_init_array",E,E,N,N],[14,"init_array",E,E,N,N]],"p":[]};
searchIndex["riscv"]={"doc":"Low level access to RISC-V processors","i":[[0,"asm","riscv","Assembly instructions",N,N],[5,"ebreak","riscv::asm","`EBREAK` instruction wrapper",N,[[]]],[5,"wfi",E,"`WFI` instruction wrapper",N,[[]]],[5,"sfence_vma_all",E,"`SFENCE.VMA` instruction wrapper (all address spaces and…",N,[[]]],[5,"sfence_vma",E,"`SFENCE.VMA` instruction wrapper",N,[[[R[3]]]]],[0,R[81],"riscv","Interrupts",N,N],[3,R[22],R[68],R[23],N,N],[3,"Mutex",E,R[24],N,N],[8,"Nr",E,R[25],N,N],[10,"nr",E,R[26],0,[[["self"]],["u8"]]],[5,"disable",E,"Disables all interrupts",N,[[]]],[5,"enable",E,"Enables all the interrupts",N,[[]]],[5,"free",E,"Execute closure `f` in an interrupt-free context.",N,[[["f"]],["r"]]],[0,"register","riscv","RISC-V CSR's",N,N],[0,"satp",R[28],R[27],N,N],[3,"Satp",R[70],R[27],N,N],[4,"Mode",E,E,N,N],[13,"Bare",E,E,1,N],[13,"Sv32",E,E,1,N],[5,"read",E,R[30],N,[[],["satp"]]],[5,"set",E,E,N,[[["mode"],[R[3]]]]],[11,"bits",E,R[32],2,[[["self"]],[R[3]]]],[11,"mode",E,"Current address-translation scheme",2,[[["self"]],["mode"]]],[11,"asid",E,"Address space identifier",2,[[["self"]],[R[3]]]],[11,"ppn",E,"Physical page number",2,[[["self"]],[R[3]]]],[0,R[31],R[28],R[29],N,N],[3,R[87],R[71],R[29],N,N],[5,"read",E,R[30],N,[[],[["option",[R[31]]],[R[31]]]]],[11,"bits",E,R[32],3,[[["self"]],[R[3]]]],[11,"jedec_manufacturer",E,"Returns the JEDEC manufacturer ID",3,[[["self"]],[R[3]]]],[0,R[34],R[28],R[33],N,N],[3,"Marchid",R[72],R[33],N,N],[5,"read",E,R[30],N,[[],[[R[34]],["option",[R[34]]]]]],[11,"bits",E,R[32],4,[[["self"]],[R[3]]]],[0,"mimpid",R[28],R[35],N,N],[3,"Mimpid",R[73],R[35],N,N],[5,"read",E,R[30],N,[[],[["option",["mimpid"]],["mimpid"]]]],[11,"bits",E,R[32],5,[[["self"]],[R[3]]]],[0,"mhartid",R[28],"mhartid register",N,N],[5,"read","riscv::register::mhartid",R[30],N,[[],[R[3]]]],[0,R[82],R[28],R[36],N,N],[3,"Mstatus",R[74],R[36],N,N],[4,"XS",E,R[47],N,N],[13,"AllOff",E,"All off",6,N],[13,"NoneDirtyOrClean",E,"None dirty or clean, some on",6,N],[13,"NoneDirtySomeClean",E,"None dirty, some clean",6,N],[13,"SomeDirty",E,"Some dirty",6,N],[4,"FS",E,R[43],N,N],[13,"Off",E,E,7,N],[13,"Initial",E,E,7,N],[13,"Clean",E,E,7,N],[13,"Dirty",E,E,7,N],[4,"MPP",E,R[42],N,N],[13,"Machine",E,E,8,N],[13,R[37],E,E,8,N],[13,"User",E,E,8,N],[4,"SPP",E,R[41],N,N],[13,R[37],E,E,9,N],[13,"User",E,E,9,N],[5,"read",E,R[30],N,[[],[R[82]]]],[5,"set_uie",E,R[38],N,[[]]],[5,"clear_uie",E,R[38],N,[[]]],[5,"set_sie",E,R[39],N,[[]]],[5,"clear_sie",E,R[39],N,[[]]],[5,"set_mie",E,R[40],N,[[]]],[5,"clear_mie",E,R[40],N,[[]]],[5,"set_upie",E,R[44],N,[[]]],[5,"set_spie",E,R[45],N,[[]]],[5,"set_mpie",E,R[46],N,[[]]],[5,"set_spp",E,R[41],N,[[["spp"]]]],[5,"set_mpp",E,R[42],N,[[["mpp"]]]],[5,"set_fs",E,R[43],N,[[["fs"]]]],[11,"uie",E,R[38],10,[[["self"]],["bool"]]],[11,"sie",E,R[39],10,[[["self"]],["bool"]]],[11,"mie",E,R[40],10,[[["self"]],["bool"]]],[11,"upie",E,R[44],10,[[["self"]],["bool"]]],[11,"spie",E,R[45],10,[[["self"]],["bool"]]],[11,"mpie",E,R[46],10,[[["self"]],["bool"]]],[11,"spp",E,R[41],10,[[["self"]],["spp"]]],[11,"mpp",E,R[42],10,[[["self"]],["mpp"]]],[11,"fs",E,R[43],10,[[["self"]],["fs"]]],[11,"xs",E,R[47],10,[[["self"]],["xs"]]],[11,"sd",E,"Whether either the FS field or XS field signals the…",10,[[["self"]],["bool"]]],[0,"misa",R[28],R[48],N,N],[3,"Misa",R[75],R[48],N,N],[4,"MXL",E,"Machine XLEN",N,N],[13,"XLEN32",E,E,11,N],[13,"XLEN64",E,E,11,N],[13,"XLEN128",E,E,11,N],[5,"read",E,R[30],N,[[],[["option",["misa"]],["misa"]]]],[11,"bits",E,R[32],12,[[["self"]],[R[3]]]],[11,"mxl",E,"Returns the machine xlen.",12,[[["self"]],["mxl"]]],[11,"has_extension",E,"Returns true when the atomic extension is implemented.",12,[[["self"],["char"]],["bool"]]],[0,"mie",R[28],R[49],N,N],[3,"Mie",R[76],R[49],N,N],[5,"read",E,R[30],N,[[],["mie"]]],[5,"set_usoft",E,R[50],N,[[]]],[5,"clear_usoft",E,R[50],N,[[]]],[5,"set_ssoft",E,R[51],N,[[]]],[5,"clear_ssoft",E,R[51],N,[[]]],[5,"set_msoft",E,R[52],N,[[]]],[5,"clear_msoft",E,R[52],N,[[]]],[5,"set_utimer",E,R[53],N,[[]]],[5,"clear_utimer",E,R[53],N,[[]]],[5,"set_stimer",E,R[54],N,[[]]],[5,"clear_stimer",E,R[54],N,[[]]],[5,"set_mtimer",E,R[55],N,[[]]],[5,"clear_mtimer",E,R[55],N,[[]]],[5,"set_uext",E,R[56],N,[[]]],[5,"clear_uext",E,R[56],N,[[]]],[5,"set_sext",E,R[57],N,[[]]],[5,"clear_sext",E,R[57],N,[[]]],[5,"set_mext",E,R[58],N,[[]]],[5,"clear_mext",E,R[58],N,[[]]],[11,"bits",E,R[32],13,[[["self"]],[R[3]]]],[11,"usoft",E,R[50],13,[[["self"]],["bool"]]],[11,"ssoft",E,R[51],13,[[["self"]],["bool"]]],[11,"msoft",E,R[52],13,[[["self"]],["bool"]]],[11,"utimer",E,R[53],13,[[["self"]],["bool"]]],[11,"stimer",E,R[54],13,[[["self"]],["bool"]]],[11,"mtimer",E,R[55],13,[[["self"]],["bool"]]],[11,"uext",E,R[56],13,[[["self"]],["bool"]]],[11,"sext",E,R[57],13,[[["self"]],["bool"]]],[11,"mext",E,R[58],13,[[["self"]],["bool"]]],[0,"mtvec",R[28],R[59],N,N],[3,"Mtvec",R[77],R[59],N,N],[4,R[88],E,"Trap mode",N,N],[13,"Direct",E,E,14,N],[13,"Vectored",E,E,14,N],[5,"read",E,R[30],N,[[],["mtvec"]]],[5,"write",E,R[61],N,[[[R[3]],[R[60]]]]],[11,"bits",E,R[32],15,[[["self"]],[R[3]]]],[11,"address",E,"Returns the trap-vector base-address",15,[[["self"]],[R[3]]]],[11,"trap_mode",E,"Returns the trap-vector mode",15,[[["self"]],[R[60]]]],[0,"mscratch",R[28],"mscratch register",N,N],[5,"read","riscv::register::mscratch",R[30],N,[[],[R[3]]]],[5,"write",E,R[61],N,[[[R[3]]]]],[0,"mepc",R[28],"mepc register",N,N],[5,"read","riscv::register::mepc",R[30],N,[[],[R[3]]]],[5,"write",E,R[61],N,[[[R[3]]]]],[0,"mcause",R[28],R[62],N,N],[3,"Mcause",R[78],R[62],N,N],[4,"Trap",E,R[65],N,N],[13,R[63],E,E,16,N],[13,R[64],E,E,16,N],[4,R[63],E,R[63],N,N],[13,"UserSoft",E,E,17,N],[13,"SupervisorSoft",E,E,17,N],[13,"MachineSoft",E,E,17,N],[13,"UserTimer",E,E,17,N],[13,"SupervisorTimer",E,E,17,N],[13,"MachineTimer",E,E,17,N],[13,"UserExternal",E,E,17,N],[13,"SupervisorExternal",E,E,17,N],[13,"MachineExternal",E,E,17,N],[13,"Unknown",E,E,17,N],[4,R[64],E,R[64],N,N],[13,"InstructionMisaligned",E,E,18,N],[13,"InstructionFault",E,E,18,N],[13,"IllegalInstruction",E,E,18,N],[13,"Breakpoint",E,E,18,N],[13,"LoadMisaligned",E,E,18,N],[13,"LoadFault",E,E,18,N],[13,"StoreMisaligned",E,E,18,N],[13,"StoreFault",E,E,18,N],[13,"UserEnvCall",E,E,18,N],[13,"SupervisorEnvCall",E,E,18,N],[13,"MachineEnvCall",E,E,18,N],[13,"InstructionPageFault",E,E,18,N],[13,"LoadPageFault",E,E,18,N],[13,"StorePageFault",E,E,18,N],[13,"Unknown",E,E,18,N],[5,"read",E,R[30],N,[[],["mcause"]]],[11,"from",E,E,17,[[[R[3]]],["self"]]],[11,"from",E,E,18,[[[R[3]]],["self"]]],[11,"bits",E,R[32],19,[[["self"]],[R[3]]]],[11,"code",E,"Returns the code field",19,[[["self"]],[R[3]]]],[11,"cause",E,R[65],19,[[["self"]],["trap"]]],[11,"is_interrupt",E,"Is trap cause an interrupt.",19,[[["self"]],["bool"]]],[11,"is_exception",E,"Is trap cause an exception.",19,[[["self"]],["bool"]]],[0,"mtval",R[28],"mtval register",N,N],[5,"read","riscv::register::mtval",R[30],N,[[],[R[3]]]],[0,"mip",R[28],R[66],N,N],[3,"Mip",R[79],R[66],N,N],[5,"read",E,R[30],N,[[],["mip"]]],[11,"bits",E,R[32],20,[[["self"]],[R[3]]]],[11,"usoft",E,"User Software Interrupt Pending",20,[[["self"]],["bool"]]],[11,"ssoft",E,"Supervisor Software Interrupt Pending",20,[[["self"]],["bool"]]],[11,"msoft",E,"Machine Software Interrupt Pending",20,[[["self"]],["bool"]]],[11,"utimer",E,"User Timer Interrupt Pending",20,[[["self"]],["bool"]]],[11,"stimer",E,"Supervisor Timer Interrupt Pending",20,[[["self"]],["bool"]]],[11,"mtimer",E,"Machine Timer Interrupt Pending",20,[[["self"]],["bool"]]],[11,"uext",E,"User External Interrupt Pending",20,[[["self"]],["bool"]]],[11,"sext",E,"Supervisor External Interrupt Pending",20,[[["self"]],["bool"]]],[11,"mext",E,"Machine External Interrupt Pending",20,[[["self"]],["bool"]]],[0,"mcycle",R[28],"mcycle register",N,N],[5,"read","riscv::register::mcycle",R[30],N,[[],[R[3]]]],[5,"read64",E,R[67],N,[[],["u64"]]],[0,"minstret",R[28],"minstret register",N,N],[5,"read","riscv::register::minstret",R[30],N,[[],[R[3]]]],[5,"read64",E,R[67],N,[[],["u64"]]],[0,"mcycleh",R[28],"mcycleh register",N,N],[5,"read","riscv::register::mcycleh",R[30],N,[[],[R[3]]]],[0,"minstreth",R[28],"minstreth register",N,N],[5,"read","riscv::register::minstreth",R[30],N,[[],[R[3]]]],[11,R[16],R[68],E,21,[[[U]],[R[1]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[17],E,E,21,[[],[R[1]]]],[11,R[19],E,E,21,[[["self"]],[T]]],[11,R[18],E,E,21,[[["self"]],[T]]],[11,R[20],E,E,21,[[["self"]],[R[69]]]],[11,R[16],E,E,22,[[[U]],[R[1]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[17],E,E,22,[[],[R[1]]]],[11,R[19],E,E,22,[[["self"]],[T]]],[11,R[18],E,E,22,[[["self"]],[T]]],[11,R[20],E,E,22,[[["self"]],[R[69]]]],[11,R[16],R[70],E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[17],E,E,2,[[],[R[1]]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[69]]]],[11,R[16],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[17],E,E,1,[[],[R[1]]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[69]]]],[11,R[16],R[71],E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[17],E,E,3,[[],[R[1]]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[R[69]]]],[11,R[16],R[72],E,4,[[[U]],[R[1]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[17],E,E,4,[[],[R[1]]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[R[69]]]],[11,R[16],R[73],E,5,[[[U]],[R[1]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[17],E,E,5,[[],[R[1]]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[R[69]]]],[11,R[16],R[74],E,10,[[[U]],[R[1]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[17],E,E,10,[[],[R[1]]]],[11,R[19],E,E,10,[[["self"]],[T]]],[11,R[18],E,E,10,[[["self"]],[T]]],[11,R[20],E,E,10,[[["self"]],[R[69]]]],[11,R[16],E,E,6,[[[U]],[R[1]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[17],E,E,6,[[],[R[1]]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[20],E,E,6,[[["self"]],[R[69]]]],[11,R[16],E,E,7,[[[U]],[R[1]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[17],E,E,7,[[],[R[1]]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[18],E,E,7,[[["self"]],[T]]],[11,R[20],E,E,7,[[["self"]],[R[69]]]],[11,R[16],E,E,8,[[[U]],[R[1]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[17],E,E,8,[[],[R[1]]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[18],E,E,8,[[["self"]],[T]]],[11,R[20],E,E,8,[[["self"]],[R[69]]]],[11,R[16],E,E,9,[[[U]],[R[1]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[17],E,E,9,[[],[R[1]]]],[11,R[19],E,E,9,[[["self"]],[T]]],[11,R[18],E,E,9,[[["self"]],[T]]],[11,R[20],E,E,9,[[["self"]],[R[69]]]],[11,R[16],R[75],E,12,[[[U]],[R[1]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[17],E,E,12,[[],[R[1]]]],[11,R[19],E,E,12,[[["self"]],[T]]],[11,R[18],E,E,12,[[["self"]],[T]]],[11,R[20],E,E,12,[[["self"]],[R[69]]]],[11,R[16],E,E,11,[[[U]],[R[1]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[17],E,E,11,[[],[R[1]]]],[11,R[19],E,E,11,[[["self"]],[T]]],[11,R[18],E,E,11,[[["self"]],[T]]],[11,R[20],E,E,11,[[["self"]],[R[69]]]],[11,R[16],R[76],E,13,[[[U]],[R[1]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[17],E,E,13,[[],[R[1]]]],[11,R[19],E,E,13,[[["self"]],[T]]],[11,R[18],E,E,13,[[["self"]],[T]]],[11,R[20],E,E,13,[[["self"]],[R[69]]]],[11,R[16],R[77],E,15,[[[U]],[R[1]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[17],E,E,15,[[],[R[1]]]],[11,R[19],E,E,15,[[["self"]],[T]]],[11,R[18],E,E,15,[[["self"]],[T]]],[11,R[20],E,E,15,[[["self"]],[R[69]]]],[11,R[16],E,E,14,[[[U]],[R[1]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[17],E,E,14,[[],[R[1]]]],[11,R[19],E,E,14,[[["self"]],[T]]],[11,R[18],E,E,14,[[["self"]],[T]]],[11,R[20],E,E,14,[[["self"]],[R[69]]]],[11,R[16],R[78],E,19,[[[U]],[R[1]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[17],E,E,19,[[],[R[1]]]],[11,R[19],E,E,19,[[["self"]],[T]]],[11,R[18],E,E,19,[[["self"]],[T]]],[11,R[20],E,E,19,[[["self"]],[R[69]]]],[11,R[16],E,E,16,[[[U]],[R[1]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[17],E,E,16,[[],[R[1]]]],[11,R[19],E,E,16,[[["self"]],[T]]],[11,R[18],E,E,16,[[["self"]],[T]]],[11,R[20],E,E,16,[[["self"]],[R[69]]]],[11,R[16],E,E,17,[[[U]],[R[1]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[17],E,E,17,[[],[R[1]]]],[11,R[19],E,E,17,[[["self"]],[T]]],[11,R[18],E,E,17,[[["self"]],[T]]],[11,R[20],E,E,17,[[["self"]],[R[69]]]],[11,R[16],E,E,18,[[[U]],[R[1]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[17],E,E,18,[[],[R[1]]]],[11,R[19],E,E,18,[[["self"]],[T]]],[11,R[18],E,E,18,[[["self"]],[T]]],[11,R[20],E,E,18,[[["self"]],[R[69]]]],[11,R[16],R[79],E,20,[[[U]],[R[1]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[17],E,E,20,[[],[R[1]]]],[11,R[19],E,E,20,[[["self"]],[T]]],[11,R[18],E,E,20,[[["self"]],[T]]],[11,R[20],E,E,20,[[["self"]],[R[69]]]],[11,"fmt",R[70],E,2,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[71],E,3,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[72],E,4,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[73],E,5,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[74],E,10,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[75],E,12,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[76],E,13,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[77],E,15,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[78],E,19,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,16,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,17,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",E,E,18,[[["self"],[R[80]]],[R[1]]]],[11,"fmt",R[79],E,20,[[["self"],[R[80]]],[R[1]]]],[11,"eq",R[70],E,1,[[["self"],["mode"]],["bool"]]],[11,"eq",R[74],E,6,[[["self"],["xs"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["fs"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["mpp"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["spp"]],["bool"]]],[11,"eq",R[75],E,11,[[["self"],["mxl"]],["bool"]]],[11,"eq",R[77],E,14,[[["self"],[R[60]]],["bool"]]],[11,"eq",R[78],E,16,[[["self"],["trap"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["trap"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[81]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[83]]],["bool"]]],[11,"clone",R[70],E,2,[[["self"]],["satp"]]],[11,"clone",E,E,1,[[["self"]],["mode"]]],[11,"clone",R[71],E,3,[[["self"]],[R[31]]]],[11,"clone",R[72],E,4,[[["self"]],[R[34]]]],[11,"clone",R[73],E,5,[[["self"]],["mimpid"]]],[11,"clone",R[74],E,10,[[["self"]],[R[82]]]],[11,"clone",E,E,6,[[["self"]],["xs"]]],[11,"clone",E,E,7,[[["self"]],["fs"]]],[11,"clone",E,E,8,[[["self"]],["mpp"]]],[11,"clone",E,E,9,[[["self"]],["spp"]]],[11,"clone",R[75],E,12,[[["self"]],["misa"]]],[11,"clone",E,E,11,[[["self"]],["mxl"]]],[11,"clone",R[76],E,13,[[["self"]],["mie"]]],[11,"clone",R[77],E,15,[[["self"]],["mtvec"]]],[11,"clone",E,E,14,[[["self"]],[R[60]]]],[11,"clone",R[78],E,19,[[["self"]],["mcause"]]],[11,"clone",E,E,16,[[["self"]],["trap"]]],[11,"clone",E,E,17,[[["self"]],[R[81]]]],[11,"clone",E,E,18,[[["self"]],[R[83]]]],[11,"clone",R[79],E,20,[[["self"]],["mip"]]],[11,"new",R[68],R[84],21,[[],[R[15]]]],[11,"new",E,R[85],22,[[[T]],["mutex"]]],[11,R[19],E,R[86],22,[[[R[15]],["self"]],[T]]]],"p":[[8,"Nr"],[4,"Mode"],[3,"Satp"],[3,R[87]],[3,"Marchid"],[3,"Mimpid"],[4,"XS"],[4,"FS"],[4,"MPP"],[4,"SPP"],[3,"Mstatus"],[4,"MXL"],[3,"Misa"],[3,"Mie"],[4,R[88]],[3,"Mtvec"],[4,"Trap"],[4,R[63]],[4,R[64]],[3,"Mcause"],[3,"Mip"],[3,R[22]],[3,"Mutex"]]};
searchIndex["riscv_rt"]={"doc":"Minimal startup / runtime for RISC-V CPU's","i":[[5,"start_rust","riscv_rt","Rust entry point (_start_rust)",N,[[]]],[5,"start_trap_rust",E,"Trap entry point rust (_start_trap_rust)",N,[[]]]],"p":[]};
searchIndex["vcell"]={"doc":R[0],"i":[[3,R[2],"vcell",R[0],N,N],[11,"new",E,"Creates a new `VolatileCell` containing the given value",0,[[[T]],["self"]]],[11,"get",E,"Returns a copy of the contained value",0,[[["self"]],[T]]],[11,"set",E,"Sets the contained value",0,[[["self"],[T]]]],[11,"as_ptr",E,"Returns a raw pointer to the underlying data in the cell",0,[[["self"]]]],[11,R[16],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[17],E,E,0,[[],[R[1]]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[69]]]]],"p":[[3,R[2]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);